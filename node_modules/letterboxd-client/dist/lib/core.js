"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (g && (g = 0, op[0] && (_ = 0)), _) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
exports.__esModule = true;
exports.request = exports.BASE_URL = void 0;
/* eslint-disable @typescript-eslint/no-explicit-any */
var crypto = __importStar(require("crypto"));
require("isomorphic-fetch");
var uuid_1 = require("uuid");
exports.BASE_URL = 'https://api.letterboxd.com/api/v0';
function buildUrl(url, params) {
    var urlObj = new URL("".concat(exports.BASE_URL).concat(url));
    if (params) {
        for (var key in params) {
            urlObj.searchParams.set(key, params[key]);
        }
    }
    return urlObj.toString();
}
function buildParams(auth, method, url, body, params) {
    if (params === void 0) { params = {}; }
    var fullParams = params;
    fullParams.apikey = auth.apiKey;
    fullParams.nonce = (0, uuid_1.v4)();
    fullParams.timestamp = Math.floor(Date.now() / 1000);
    var sigBase = [
        method.toUpperCase(),
        buildUrl(url, fullParams),
        body ? (body instanceof URLSearchParams ? body.toString() : JSON.stringify(body)) : '',
    ].join('\u0000');
    fullParams.signature = crypto.createHmac('sha256', auth.apiSecret).update(sigBase).digest('hex').toLowerCase();
    return fullParams;
}
function request(opts) {
    var _this = this;
    var formBody;
    if (opts.headers && opts.body && opts.headers['Content-Type'] === 'application/x-www-form-urlencoded') {
        formBody = new URLSearchParams();
        for (var key in opts.body) {
            formBody.append(key, opts.body[key]);
        }
    }
    var params = buildParams(opts.auth, opts.method, opts.path, formBody || opts.body, opts.params);
    var url = buildUrl(opts.path, params);
    return fetch(url, {
        method: opts.method,
        body: formBody || (opts.body ? JSON.stringify(opts.body) : undefined),
        headers: __assign(__assign({}, opts.headers), (opts.auth.accessToken ? { Authorization: "Bearer ".concat(opts.auth.accessToken) } : {}))
    }).then(function (res) { return __awaiter(_this, void 0, void 0, function () {
        var buffer, data, response;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0: return [4 /*yield*/, res.arrayBuffer().then(Buffer.from)];
                case 1: return [4 /*yield*/, (_a.sent()).toString()];
                case 2:
                    buffer = _a.sent();
                    try {
                        data = JSON.parse(buffer);
                    }
                    catch (err) {
                        data = buffer;
                    }
                    response = {
                        res: res,
                        status: res.status,
                        data: data
                    };
                    return [2 /*return*/, response];
            }
        });
    }); });
}
exports.request = request;
